<div class='chat-room-form'>
  <h1>新規チャットルーム</h1>
  <%=form_with model: @room, local: true do |f|%>
    <div class='chat-room-form__field'>
      <div class='chat-room-form__field--left'>
        <%= f.label :チャットルーム名, class: 'chat-room-form__label'%>
      </div>
      <div class='chat-room-form__field--right'>
        <%= f.text_field :name, class: 'chat__room_name chat-room-form__input', placeholder: 'チャットルーム名を入力してください'%>
      </div>
    </div>
    <div class='chat-room-form__field'>
    </div>
    <div class='chat-room-form__field'>
      <div class='chat-room-form__field--left'>
        <label class='chat-room-form__label' for='chat_room_チャットメンバー'>チャットメンバー</label>
      </div>
      <div class='chat-room-form__field--right'>
        <select name="room[user_ids][]">
          <option value="">チャットするユーザーを選択してください</option>
          <% User.where.not(id: current_user.id).each do |user| %> 
            <option value=<%= user_id %>><%= user.name %></option>
          <% end %>

          <%# モデル名.where("条件")と記述すると、条件に一致したレコードを配列として取得できます。
          このwhereメソッドに続けてnotメソッドを追記すると、
          モデル名.where.not("条件")は、条件に一致したレコード以外の値を配列として取得できます。 %>

        </select>
        <input name="room[user_ids][]" type="hidden" value=<%= current_user.id %>>

        <%# type属性にhiddenを指定することで、画面上には表示されないinput要素を作成できます。
        そして、先ほどのselect要素と同様、name属性にroom[user_ids][]を指定し、
        room[user_ids]をキーに対する値を配列で受け取る仕組みです。
        value属性にはcurrent_user.idを指定しているため、room[user_ids]キーに対して、
        ログイン中ユーザーのidを配列として格納し、コントローラーへ送信します。 %>
        
      </div>
    </div>
    <div class='chat-room-form__field'>
      <div class='chat-room-form__field--left'></div>
      <div class='chat-room-form__field--right'>
        <%= f.submit class: 'chat-room-form__action-btn'%>
      </div>
    </div>
  <% end %>
</div>
